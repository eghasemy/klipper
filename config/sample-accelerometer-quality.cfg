# Example configuration for accelerometer quality control
#
# This example shows how to configure the accelerometer_quality module
# for real-time print quality control using an ADXL345 accelerometer.

# First configure your ADXL345 accelerometer as usual
[adxl345]
cs_pin: rpi:None
spi_bus: spidev0.0

# Configure the accelerometer quality control module
[accelerometer_quality]
# Reference to the accelerometer chip (default: adxl345)
accel_chip: adxl345

# Vibration threshold for triggering speed reduction (default: 5000.0)
# Higher values = less sensitive to vibration
# Units: mm/sÂ² (acceleration magnitude)
vibration_threshold: 5000.0

# Speed reduction factor when high vibration is detected (default: 0.8)
# 0.8 = reduce speed to 80% of current speed
# Range: 0.1 to 1.0
speed_reduction_factor: 0.8

# Speed increase factor when vibration is low (default: 1.1)  
# 1.1 = increase speed to 110% of current speed
# Range: 1.0 to 2.0
speed_increase_factor: 1.1

# How often to check vibration levels in seconds (default: 1.0)
# Smaller values = more responsive, but more processing overhead
sample_time: 1.0

# Vibration threshold for "stable" conditions (default: 1000.0)
# Below this threshold, speed can be increased
# Should be lower than vibration_threshold
stable_threshold: 1000.0

# Usage:
# 1. Start a print
# 2. Use ACCELEROMETER_QUALITY_ENABLE to activate real-time control
# 3. Use ACCELEROMETER_QUALITY_STATUS to check current status
# 4. Use ACCELEROMETER_QUALITY_DISABLE to deactivate
#
# The system will automatically:
# - Reduce speed when high vibration is detected
# - Increase speed when conditions are stable
# - Restore original speed when disabled