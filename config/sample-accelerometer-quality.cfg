# Example configuration for accelerometer quality control
#
# This example shows how to configure the accelerometer_quality module
# for real-time print quality control using an ADXL345 accelerometer.

# First configure your ADXL345 accelerometer as usual
[adxl345]
cs_pin: rpi:None
spi_bus: spidev0.0

# Configure the accelerometer quality control module
[accelerometer_quality]
# Reference to the accelerometer chip (default: adxl345)
accel_chip: adxl345

# Vibration threshold for triggering speed reduction (default: 5000.0)
# Higher values = less sensitive to vibration
# Units: mm/sÂ² (acceleration magnitude)
vibration_threshold: 5000.0

# Speed reduction factor when high vibration is detected (default: 0.8)
# 0.8 = reduce speed to 80% of current speed
# Range: 0.1 to 1.0
speed_reduction_factor: 0.8

# Speed increase factor when vibration is low (default: 1.1)  
# 1.1 = increase speed to 110% of current speed
# Range: 1.0 to 2.0
speed_increase_factor: 1.1

# How often to check vibration levels in seconds (default: 1.0)
# Smaller values = more responsive, but more processing overhead
sample_time: 1.0

# Vibration threshold for "stable" conditions (default: 1000.0)
# Below this threshold, speed can be increased
# Should be lower than vibration_threshold
stable_threshold: 1000.0

# ENHANCED FEATURES

# Simulation mode - capture decisions without applying them (default: False)
# Set to True to see what the system would do without affecting prints
simulation_mode: False

# Expected accelerometer sample frequency in Hz (default: 100.0)
# Used for signal processing calculations
# Range: 10.0 to 1000.0
sample_frequency: 100.0

# Enable frequency analysis for enhanced decision making (default: True)
# Performs FFT analysis to identify resonance patterns
enable_frequency_analysis: True

# Resonance frequency threshold in Hz (default: 50.0)
# Frequencies above this are considered potentially problematic
# Range: 1.0 to 200.0
resonance_frequency_threshold: 50.0

# Low-pass filter cutoff frequency in Hz (default: 20.0)
# Filters high-frequency noise from accelerometer data
# Set to 0 to disable filtering
# Range: 1.0 to 100.0
filter_cutoff_frequency: 20.0

# Usage:
# 1. Start a print
# 2. Use ACCELEROMETER_QUALITY_ENABLE to activate real-time control
# 3. Use ACCELEROMETER_QUALITY_STATUS to check current status
# 4. Use ACCELEROMETER_QUALITY_DECISIONS to see recent decisions
# 5. Use ACCELEROMETER_QUALITY_SIMULATION ENABLE=1 for simulation mode
# 6. Use ACCELEROMETER_QUALITY_DISABLE to deactivate
#
# The enhanced system will:
# - Apply signal filtering to reduce noise
# - Perform frequency analysis to detect resonance
# - Make more sophisticated speed adjustment decisions
# - Log all decisions for analysis (in simulation mode or actual mode)
# - Provide detailed decision history and reasoning