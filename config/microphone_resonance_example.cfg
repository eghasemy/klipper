# Example configuration for microphone-enhanced resonance testing
#
# This file demonstrates how to configure microphone support
# for enhanced resonance compensation in Klipper.

#=====================================================
# MICROPHONE-ENHANCED RESONANCE TESTING CONFIGURATION
#=====================================================

[resonance_tester]
# Standard accelerometer configuration
accel_chip: adxl345
probe_points:
    100,100,20  # Bed center
    50,50,20    # Front left
    150,150,20  # Back right

# Microphone enhancement settings
enable_microphone: True              # Enable microphone support
audio_device: default               # Audio device (default, hw:0, etc.)
sample_rate: 44100                  # Audio sample rate (8000-192000 Hz)
buffer_duration: 2.0                # Audio buffer duration in seconds
noise_threshold_db: -60.0           # Noise floor threshold in dB
min_frequency: 5.0                  # Minimum analysis frequency
max_frequency: 200.0                # Maximum analysis frequency

#=====================================================
# USAGE EXAMPLES
#=====================================================

# Basic resonance test with microphone
# SHAPER_CALIBRATE MICROPHONE=1

# Comprehensive analysis with microphone
# SHAPER_CALIBRATE COMPREHENSIVE=1 MICROPHONE=1

# Multi-point calibration with microphone
# SHAPER_CALIBRATE MULTI_POINT=1 MICROPHONE=1

# Full comprehensive test with microphone
# COMPREHENSIVE_RESONANCE_TEST MICROPHONE=1

#=====================================================
# MICROPHONE SETUP REQUIREMENTS
#=====================================================

# Install required Python packages:
# ~/klippy-env/bin/pip install pyaudio
# OR
# ~/klippy-env/bin/pip install sounddevice

# For USB microphones, ensure proper permissions:
# sudo usermod -a -G audio pi
# sudo usermod -a -G audio klipper

# Test microphone setup:
# arecord -l  # List available audio devices
# arecord -D hw:0 -d 5 -f cd test.wav  # Test recording

#=====================================================
# ADVANCED CONFIGURATION OPTIONS
#=====================================================

[microphone_resonance]
# Advanced microphone settings (optional section)
audio_device: hw:1,0                # Specific USB microphone
sample_rate: 48000                  # Higher sample rate for better resolution
buffer_duration: 3.0               # Longer buffer for more data
noise_threshold_db: -50.0           # Lower threshold for sensitive microphones
min_frequency: 3.0                  # Extend low frequency range
max_frequency: 300.0                # Extend high frequency range

#=====================================================
# BENEFITS OF MICROPHONE-ENHANCED TESTING
#=====================================================

# 1. Cross-validation of accelerometer data
# 2. Detection of resonances not visible in acceleration
# 3. Better frequency resolution in some cases
# 4. Confirmation of resonance patterns
# 5. Detection of audio-only resonances (belt noise, fan noise, etc.)
# 6. Improved confidence in shaper recommendations

#=====================================================
# TROUBLESHOOTING
#=====================================================

# If microphone is not detected:
# - Check audio device name with 'arecord -l'
# - Verify permissions with 'groups pi' (should include 'audio')
# - Test with: python3 -c "import pyaudio; print('PyAudio OK')"

# If audio quality is poor:
# - Increase sample_rate to 48000 or higher
# - Lower noise_threshold_db
# - Check microphone positioning (avoid fan noise)
# - Use directional microphone pointed at printer

# If correlation is low:
# - Check microphone placement near printer
# - Ensure no audio interference
# - Verify accelerometer is working properly
# - Try different frequency ranges